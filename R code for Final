library(ggplot2)
library(lubridate)
library(zoo)
library(dplyr)
library(scales)
library(tidyverse)
library(GGally)
library(corrplot)
library(MASS)
library(cowplot)

#-----------------------------------------------DATA SOURCE AND PREPROCESSING----------------------------------------------------------------

#read in data and separate out the semicolons, make 1st row a header, omit any missing values. 
redwine_Data <- read.csv(file = "http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ";") %>%
  na.omit()
attach(redwine_Data)
#shows dimensions of dataset
str(redwine_Data)

#summary of each column
summary(redwine_Data)


#----------------------------------------------EXPLORATORY DATA ANALYSIS-----------------------------------------

#making histograms/density plots to visualize spread of data for each predictor

hist1 <- ggplot(redwine_Data, aes(x=alcohol)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="Alcohol percentage", y="Density") + 
  geom_vline(aes(xintercept=mean(alcohol)), color="blue", linetype="dashed", size=1)

hist2 <- ggplot(redwine_Data, aes(x=pH)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="pH", y="Density") + 
  geom_vline(aes(xintercept=mean(pH)), color="blue", linetype="dashed", size=1)

hist3 <- ggplot(redwine_Data, aes(x=fixed.acidity)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="fixed acidity", y="Density") + 
  geom_vline(aes(xintercept=mean(fixed.acidity)), color="blue", linetype="dashed", size=1)

hist4 <- ggplot(redwine_Data, aes(x=volatile.acidity)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="volatile acidity", y="Density") + 
  geom_vline(aes(xintercept=mean(volatile.acidity)), color="blue", linetype="dashed", size=1)

hist5 <- ggplot(redwine_Data, aes(x=citric.acid)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="citric acid", y="Density") + 
  geom_vline(aes(xintercept=mean(citric.acid)), color="blue", linetype="dashed", size=1)

hist6 <- ggplot(redwine_Data, aes(x=residual.sugar)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="residual sugar", y="Density") + 
  geom_vline(aes(xintercept=mean(residual.sugar)), color="blue", linetype="dashed", size=1)

hist7 <- ggplot(redwine_Data, aes(x=chlorides)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="chlorides", y="Density") + 
  geom_vline(aes(xintercept=mean(chlorides)), color="blue", linetype="dashed", size=1)

hist8 <- ggplot(redwine_Data, aes(x=free.sulfur.dioxide)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="free sulfur dioxide", y="Density") + 
  geom_vline(aes(xintercept=mean(free.sulfur.dioxide)), color="blue", linetype="dashed", size=1)

hist9 <- ggplot(redwine_Data, aes(x=total.sulfur.dioxide)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="total sulfur dioxide", y="Density") + 
  geom_vline(aes(xintercept=mean(total.sulfur.dioxide)), color="blue", linetype="dashed", size=1)

hist10 <- ggplot(redwine_Data, aes(x=density)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="density", y="Density") + 
  geom_vline(aes(xintercept=mean(density)), color="blue", linetype="dashed", size=1)

hist11 <- ggplot(redwine_Data, aes(x=sulphates)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="sulphates", y="Density") + 
  geom_vline(aes(xintercept=mean(sulphates)), color="blue", linetype="dashed", size=1)

hist12 <- ggplot(redwine_Data, aes(x=quality)) + geom_histogram(aes(y=..density..),color="black", fill="white") + 
  geom_density(alpha=.2, fill="#FF6666") + labs(x="quality", y="Density") + 
  geom_vline(aes(xintercept=mean(quality)), color="blue", linetype="dashed", size=1)

plot_grid(hist1, hist2, hist3, hist4)
plot_grid(hist5, hist6, hist7, hist8)
plot_grid(hist9, hist10, hist11, hist12)
#density plots show that most distributions or positively skewed. pH and density are normally distributed. 



#QQ plots
qqplot_pH <- ggplot(redwine_Data, aes(sample=pH)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot pH") + theme_cowplot()

qqplot_density <- ggplot(redwine_Data, aes(sample=density)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot density") + theme_cowplot()

qqplot_alcohol <- ggplot(redwine_Data, aes(sample=alcohol)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot alcohol") + theme_cowplot()

qqplot_chlorides <- ggplot(redwine_Data, aes(sample=chlorides)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot chlorides") + theme_cowplot()

qqplot_fixed.acidity <- ggplot(redwine_Data, aes(sample=fixed.acidity)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot fixed.acidity") + theme_cowplot()

qqplot_citric.acid <- ggplot(redwine_Data, aes(sample=citric.acid)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot citric.acid") + theme_cowplot()

qqplot_volatile.acidity <- ggplot(redwine_Data, aes(sample=volatile.acidity)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot volatile.acidity") + theme_cowplot()

qqplot_residual.sugar <- ggplot(redwine_Data, aes(sample=residual.sugar)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot residual.sugar") + theme_cowplot()

qqplot_free.sulfur.dioxide <- ggplot(redwine_Data, aes(sample=free.sulfur.dioxide)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot free.sulfur.dioxide") + theme_cowplot()

qqplot_total.sulfur.dioxide <- ggplot(redwine_Data, aes(sample=total.sulfur.dioxide)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot total.sulfur.dioxide") + theme_cowplot()

qqplot_sulphates <- ggplot(redwine_Data, aes(sample=sulphates)) + stat_qq() + stat_qq_line(color="steelblue", lwd=1) + 
  labs(x="Theoretical Quantiles", y="Sample Quantiles", title="QQ plot sulphates") + theme_cowplot()

plot_grid(qqplot_pH, qqplot_density, qqplot_alcohol, qqplot_fixed.acidity)
plot_grid(qqplot_citric.acid, qqplot_chlorides, qqplot_volatile.acidity, qqplot_residual.sugar)
plot_grid(qqplot_free.sulfur.dioxide, qqplot_total.sulfur.dioxide, qqplot_sulphates)
#QQ plots of pH and density are shown to have near normal distribution. For the other variables, their data is close to normal
#distribution within 2 standard deviations of the mean but become right skewed. Extremely positive skewed data is not desirable
#since high levels can cause misleading data. For our case the data is not too positively skewed. 



#Create boxplots of each predictor vs quality
box1 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=alcohol, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="alcohol", title="Boxplot of quality vs alcohol") + theme_classic() + theme(legend.position="none")

box2 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=sulphates, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="sulphates", title="Boxplot of quality vs sulphates") + theme_classic() + theme(legend.position="none") 

box3 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=residual.sugar, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="residual sugar", title="Boxplot of quality vs residual sugar") + theme_classic() + theme(legend.position="none")

box4 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=citric.acid, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="citric acid", title="Boxplot of quality vs citric acid") + theme_classic() + theme(legend.position="none") 

box5 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=chlorides, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="chlorides", title="Boxplot of quality vs chlorides") + theme_classic() + theme(legend.position="none")

box6 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=volatile.acidity, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="volatile acidity", title="Boxplot of quality vs volatile acidity") + theme_classic() + theme(legend.position="none") 

box7 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=fixed.acidity, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="fixed acidity", title="Boxplot of quality vs fixed acidity") + theme_classic() + theme(legend.position="none") 

box8 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=pH, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="pH", title="Boxplot of quality vs pH") + theme_classic() + theme(legend.position="none")

box9 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=density, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="density", title="Boxplot of quality vs density") + theme_classic() + theme(legend.position="none")

box10 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=total.sulfur.dioxide, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="total sulfur dioxide", title="Boxplot of quality vs total sulfur dioxide") + theme_classic() + theme(legend.position="none")

box11 <- ggplot(redwine_Data, aes(x=as.factor(quality), y=free.sulfur.dioxide, fill=as.factor(quality))) + geom_boxplot() + 
  labs(x="quality", y="free sulfur dioxide", title="Boxplot of quality vs free sulfur dioxide") + theme_classic() + theme(legend.position="none")

plot_grid(box1,box2,box3,box4)
plot_grid(box5,box6,box7,box8)
plot_grid(box9,box10,box11)
#look for pattern in these boxplots
#We see linear positive relationship with quality from alchohol, sulphates, fixed acidity, and citric acid.
#We also see a linear negative relationship with quality from density, volatile acidity, pH and chlorides 

#find correlations, use cor() to produce matrix and corrplot to display a plot 
cor(redwine_Data)
corrplot(cor(redwine_Data), method="color",addCoef.col = "black", diag=FALSE,number.cex=0.7)
#density and fixed.acidity (0.67), fixed.acidity and citric acid (0.67), fixed.acidity and pH (-0.68), free.sulfur.dioxide
#and total.sulfur.dioxide (0.67) have strong correlation, perhaps high multicollinearity


#display in order the value the predictors correlate to Quality 
rankQuality <- cor(redwine_Data)[-12,12] %>% abs()
head(rankQuality[order(rankQuality, decreasing=TRUE)],12)

#display table of quality scores. Most the scores are in 5 and 6 with little data for lower and higher scores. 
table(redwine_Data$quality)


#-----------------------------------Feature engineering and selection-------------------------------------------------
# we could log transform the data to help fix the positively skewed data for several variables. When we look at a plot of the
# log transformation, it does not improve the normalization or the linearity between quality and the predictors. Will most likely 
#not need to transform

#log_redwine <- log(redwine_Data[,1:11])
#log_redwine$quality <- redwine_Data$quality


#Remove outliers, I will add code upon this. 

#------------------------------------------------Feature Selection-------------------------------------------------

#split dataset into training and testing, 70:30 split. Leaves 1119 obs for training and 381 obs for testing.
redwine_training <- sample_frac(tbl=redwine_Data, replace = FALSE, size = 0.80)
redwine_test <- anti_join(redwine_Data, redwine_training)

#Initial model performance for reference check
first_model <- lm(redwine_training$quality~., data=redwine_training)
summary(first_model)
#Linear regression is an analysis that assesses whether one or more predictor variables explain the dependent (criterion) variable.
#The regression has five key assumptions:
#Linear relationship
#Multivariate normality
#No or little multicollinearity
#No auto-correlation
#Homoscedasticity

par(mfrow=c(2,2)) # Change the panel layout to 2 x 2 
lapply(c(1,2,4,5), # showing 4 types of plots
       function(x) plot(first_model, 
                        which = x, 
                        # labels.id = 1:nrow(X.train_red),
                        cook.levels = c(0.05, 0.1))) %>% invisible()

